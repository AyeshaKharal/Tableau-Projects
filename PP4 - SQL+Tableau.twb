<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Table1)' inline='true' name='federated.0o45jt70fptghn19ov1f41mev00e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table1' name='excel-direct.00zjkbg1ubjtkr14374440x4ae07'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DELL/Desktop/Learning Logs/Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.00zjkbg1ubjtkr14374440x4ae07' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.00zjkbg1ubjtkr14374440x4ae07' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B142382FFA9D4EBB9D7104D46B3ABAAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B142382FFA9D4EBB9D7104D46B3ABAAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_B142382FFA9D4EBB9D7104D46B3ABAAB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_B142382FFA9D4EBB9D7104D46B3ABAAB]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_B142382FFA9D4EBB9D7104D46B3ABAAB'>
            <properties context=''>
              <relation connection='excel-direct.00zjkbg1ubjtkr14374440x4ae07' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table2)' inline='true' name='federated.18rryb91nc6yq81d23ued0dshe9v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table2' name='excel-direct.06qh7ua17wvqul1a6n5fz1eeecvl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DELL/Desktop/Learning Logs/Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06qh7ua17wvqul1a6n5fz1eeecvl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06qh7ua17wvqul1a6n5fz1eeecvl' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6287568412F54F2EBC40FD15AF137BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6287568412F54F2EBC40FD15AF137BF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6287568412F54F2EBC40FD15AF137BF2]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#7873c0'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#a26dc2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ce69be'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#eb73b3'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6287568412F54F2EBC40FD15AF137BF2'>
            <properties context=''>
              <relation connection='excel-direct.06qh7ua17wvqul1a6n5fz1eeecvl' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table4)' inline='true' name='federated.1fuippw12sej021b2kt5k0pysck9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table4' name='excel-direct.0l52j2d1p9svx10zxkfpt05msxvn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DELL/Desktop/Learning Logs/Table4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0l52j2d1p9svx10zxkfpt05msxvn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0l52j2d1p9svx10zxkfpt05msxvn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_89FC9711EED34794BE1F8EB6D7CA9A7D'>
            <properties context=''>
              <relation connection='excel-direct.0l52j2d1p9svx10zxkfpt05msxvn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table3)' inline='true' name='federated.0957v201y278uz1cz52u71f5zr5d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table3' name='excel-direct.14el5f60yabkpm1ab1g860lgjve6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DELL/Desktop/Learning Logs/Table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.14el5f60yabkpm1ab1g860lgjve6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.14el5f60yabkpm1ab1g860lgjve6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_65A74B2BD5804B2A9C9380578803E2DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_65A74B2BD5804B2A9C9380578803E2DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_65A74B2BD5804B2A9C9380578803E2DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_65A74B2BD5804B2A9C9380578803E2DF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_65A74B2BD5804B2A9C9380578803E2DF]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_65A74B2BD5804B2A9C9380578803E2DF'>
            <properties context=''>
              <relation connection='excel-direct.14el5f60yabkpm1ab1g860lgjve6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_E2FE019D407B45148F78021D0DC2379C]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Sheet 4' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_975108E300E64C37B25F222026D1F3D2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='18'>COVID-19: Global Infection and Death Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table1)' name='federated.0o45jt70fptghn19ov1f41mev00e' />
          </datasources>
          <datasource-dependencies datasource='federated.0o45jt70fptghn19ov1f41mev00e'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o45jt70fptghn19ov1f41mev00e].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o45jt70fptghn19ov1f41mev00e].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0o45jt70fptghn19ov1f41mev00e].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0o45jt70fptghn19ov1f41mev00e].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0o45jt70fptghn19ov1f41mev00e].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0o45jt70fptghn19ov1f41mev00e].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='202' />
            <format attr='height' value='43' />
            <format attr='cell-w' value='54' />
            <format attr='cell-h' value='18' />
            <format attr='cell' value='18' />
            <format attr='cell-q' value='90' />
            <format attr='text-format' field='[federated.0o45jt70fptghn19ov1f41mev00e].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='color' value='#333333' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='32' />
            <format attr='background-color' data-class='subtotal' value='#1b1b1b' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='#dea5ff' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='bold' />
            <format attr='font-size' data-class='subtotal' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='18' />
            <format attr='wrap' data-class='subtotal' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='off' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='bold' />
            <format attr='wrap' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='on' />
            <format attr='text-align' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='center' />
            <format attr='vertical-align' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='center' />
            <format attr='font-size' field='[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0o45jt70fptghn19ov1f41mev00e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{504463B2-CBB5-4AFB-8DE1-FE4C586D8274}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table2)' name='federated.18rryb91nc6yq81d23ued0dshe9v' />
          </datasources>
          <datasource-dependencies datasource='federated.18rryb91nc6yq81d23ued0dshe9v'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18rryb91nc6yq81d23ued0dshe9v].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]' value='110' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]' value='60' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18rryb91nc6yq81d23ued0dshe9v].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{0C03DF6B-ABE9-42C9-ABB3-316D52591357}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000cc' fontname='Tableau Medium' fontsize='9'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table3)' name='federated.0957v201y278uz1cz52u71f5zr5d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0957v201y278uz1cz52u71f5zr5d'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0957v201y278uz1cz52u71f5zr5d].[Longitude (generated)]' field-type='quantitative' max='-20063715.72046699' min='-41021757.284318641' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0957v201y278uz1cz52u71f5zr5d].[Latitude (generated)]' field-type='quantitative' max='9182535.5647493079' min='-1310551.1711470066' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0957v201y278uz1cz52u71f5zr5d].[none:Location:nk]' />
              <color column='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' />
              <text column='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0957v201y278uz1cz52u71f5zr5d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0957v201y278uz1cz52u71f5zr5d].[Latitude (generated)]</rows>
        <cols>[federated.0957v201y278uz1cz52u71f5zr5d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9E86B755-991F-4EDC-992A-813C514A0D82}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percentage Population Infected (Prediction)</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table4)' name='federated.1fuippw12sej021b2kt5k0pysck9' />
          </datasources>
          <datasource-dependencies datasource='federated.1fuippw12sej021b2kt5k0pysck9'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1fuippw12sej021b2kt5k0pysck9].[none:date:qk]' included-values='in-range'>
            <min>#2020-03-22#</min>
          </filter>
          <slices>
            <column>[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]</column>
            <column>[federated.1fuippw12sej021b2kt5k0pysck9].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1fuippw12sej021b2kt5k0pysck9].[fVal:avg:PercentPopulationInfected:qk]' field-type='quantitative' max='8.27414850335024' min='-0.92592006154550677' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1fuippw12sej021b2kt5k0pysck9].[tmn:date:qk]' field-type='quantitative' max='#2021-12-22 09:31:05.822#' min='#2019-11-17 18:15:42.607#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]&#10;[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]' value='Location&#10;'>
              <formatted-text>
                <run>Location&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]' />
              <color column='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1fuippw12sej021b2kt5k0pysck9].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1fuippw12sej021b2kt5k0pysck9].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{88F3B6B1-837F-460E-87C0-59B5147887D5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type-v2='layout-flow' w='99000' x='500' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='99000' x='500' y='1000'>
              <zone h='45750' id='3' name='Sheet 4' w='82813' x='500' y='53250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52250' id='9' name='Sheet 3' w='47125' x='52375' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='29875' id='11' name='Sheet 2' w='51875' x='500' y='23375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22375' id='13' name='Sheet 1' w='44063' x='500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22375' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' show-title='false' type-v2='color' w='7812' x='44563' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45750' id='8' name='Sheet 4' pane-specification-id='0' param='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]&#10;[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]' type-v2='color' w='16187' x='83313' y='53250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type-v2='layout-flow' w='99000' x='500' y='1000'>
                <zone fixed-size='171' h='22375' id='13' is-fixed='true' name='Sheet 1' w='44063' x='500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52250' id='9' is-fixed='true' name='Sheet 3' w='47125' x='52375' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22375' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' show-title='false' type-v2='color' w='7812' x='44563' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='231' h='29875' id='11' is-fixed='true' name='Sheet 2' w='51875' x='500' y='23375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45750' id='3' is-fixed='true' name='Sheet 4' w='82813' x='500' y='53250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45750' id='8' name='Sheet 4' pane-specification-id='0' param='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]&#10;[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]' type-v2='color' w='16187' x='83313' y='53250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7289B963-656B-4F3E-91D1-382B64AE3EDF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0o45jt70fptghn19ov1f41mev00e].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0F71187-E5C4-47C7-886D-F970D085112E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.18rryb91nc6yq81d23ued0dshe9v].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18rryb91nc6yq81d23ued0dshe9v].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0814DF5B-3688-40D0-94DC-450CBD7760FA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0957v201y278uz1cz52u71f5zr5d].[sum:PercentPopulationInfected:qk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0957v201y278uz1cz52u71f5zr5d].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D10A352C-5C89-4F97-A576-A928F4BA1B1E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]&#10;[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]</field>
            <field>[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]</field>
            <field>[federated.1fuippw12sej021b2kt5k0pysck9].[none:date:qk]</field>
            <field>[federated.1fuippw12sej021b2kt5k0pysck9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF9CDB6A-268E-43CE-9DA0-281E31BC85A7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1fuippw12sej021b2kt5k0pysck9].[none:Location:nk]&#10;[federated.1fuippw12sej021b2kt5k0pysck9].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{73DE65A6-F92F-4ABC-9750-DC2BF6C8FBFF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='79' name='Sheet 1' width='192'>
      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
      R6I/2+ooAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
